language: java
os: linux
env:
  global:
    - SHA=$(git rev-parse HEAD)
    # deactivate prompts in gcloud
    - CLOUDSDK_CORE_DISABLE_PROMPTS=1
jobs:
  include:
    - stage: test
      language: java
      services:
        - postgresql
        - redis
        - docker
      cache:
        directories:
          - "$HOME/.cache"
      install:
        # load ci env variables
        - export $(cat .env.ci | xargs)
        # setup database and schema
        - psql -c 'drop database if exists dwhtest;' -U postgres
        - psql -c 'create database dwhtest;' -U postgres
        # build java packages
        - mvn -ntp clean package -DskipTests=true -Dmaven.javadoc.skip=true -B -V
        # run migrations on test database
        - java -Dspring.profiles.active=integration-test -jar ./migrator/target/application.jar
      script:
        - mvn -ntp install
      after_success:
        - bash <(curl -s https://codecov.io/bash) -t $CODECOV_TOKEN -f lib-common/target/site/jacoco/jacoco.xml -c -F java
        - bash <(curl -s https://codecov.io/bash) -t $CODECOV_TOKEN -f app-importer/target/site/jacoco/jacoco.xml -c -F java
    - language: node_js
      node_js:
        - 12
      before_script:
        - cd web-dwh
        - yarn install
      cache:
        directories:
          - "node_modules"
      script:
        - yarn test:coverage
      after_success:
        - cd ..
        - bash <(curl -s https://codecov.io/bash) -t $CODECOV_TOKEN -f web-dwh/coverage/coverage-final.json -c -F reactapp
    - stage: deployment
      language: shell
      os: linux
      before_deploy:
        - echo hello
#        - openssl help
#        # decode encrypted service account key
#        - openssl aes-256-cbc -K $encrypted_0c35eebf403c_key -iv $encrypted_0c35eebf403c_iv -in service-account.json.enc -out service-account.json -d
#        # download gcloud
#        - curl https://sdk.cloud.google.com | bash > /dev/null;
#        # setup gcloud
#        - source $HOME/google-cloud-sdk/path.bash.inc
#        # install kubectl to travis
#        - gcloud components update kubectl
#        # login
#        - gcloud auth activate-service-account --key-file service-account.json
#        # set project
#        - gcloud config set project dwh-project-266108
#        # set region
#        - gcloud config set compute/zone europe-west2-a
#        # set cluster
#        - gcloud container clusters get-credentials dwh-cluster-1
#      deploy:
#        provider: script
#        script: bash ./deploy.sh
#        on:
#          branch: develop
